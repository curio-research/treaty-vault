{"version":3,"file":"map.js","sourceRoot":"","sources":["../../src/types/map.ts"],"names":[],"mappings":";;;AAAA,+BAAkD;AAerC,QAAA,mBAAmB,GAAmB;IACjD,KAAK,EAAE,EAAE;IACT,UAAU,EAAE,CAAC;IACb,WAAW,EAAE,CAAC;IACd,mBAAmB,EAAE,CAAC;IACtB,aAAa,EAAE,CAAC;IAChB,qBAAqB,EAAE,CAAC;IACxB,qBAAqB,EAAE,CAAC;IACxB,cAAc,EAAE,CAAC;IACjB,SAAS,EAAE,CAAC;CACb,CAAC;AAUF,MAAa,SAAS;IAWpB,YAAY,WAAmB;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;QAE/B,IAAA,qBAAc,EAAC,IAAI,EAAE;YACnB,WAAW,EAAE,iBAAU;YACvB,QAAQ,EAAE,iBAAU;YACpB,iBAAiB,EAAE,iBAAU;YAC7B,aAAa,EAAE,iBAAU;YACzB,aAAa,EAAE,iBAAU;SAC1B,CAAC,CAAC;IACL,CAAC;CACF;AA1BD,8BA0BC","sourcesContent":["import { makeObservable, observable } from 'mobx';\nimport { TILE_TYPE } from './deployment';\n\nexport interface WorldConstants {\n  admin: string;\n  worldWidth: number;\n  worldHeight: number;\n  numInitTerrainTypes: number;\n  initBatchSize: number;\n  maxCityCountPerPlayer: number;\n  maxArmyCountPerPlayer: number;\n  maxPlayerCount: number;\n  tileWidth: number;\n}\n\nexport const emptyWorldConstants: WorldConstants = {\n  admin: '',\n  worldWidth: 0,\n  worldHeight: 0,\n  numInitTerrainTypes: 0,\n  initBatchSize: 0,\n  maxCityCountPerPlayer: 0,\n  maxArmyCountPerPlayer: 0,\n  maxPlayerCount: 0,\n  tileWidth: 0,\n};\n\nexport interface Tile {\n  terrain: TILE_TYPE;\n}\n\nexport type Tiles = Map<string, Tile>;\n\nexport type Components = Map<string, Component>;\n\nexport class Component {\n  componentId: number;\n\n  entities: Set<number>;\n\n  entityToPrevValue: Map<number, any>; // entity -> prevValue\n\n  entityToValue: Map<number, any>; // entity -> value\n\n  valueToEntity: Map<any, Set<number>>; // value -> set(entity)'\n\n  constructor(componentId: number) {\n    this.componentId = componentId;\n    this.entities = new Set();\n    this.entityToPrevValue = new Map();\n    this.entityToValue = new Map();\n    this.valueToEntity = new Map();\n\n    makeObservable(this, {\n      componentId: observable,\n      entities: observable,\n      entityToPrevValue: observable,\n      entityToValue: observable,\n      valueToEntity: observable,\n    });\n  }\n}\n"]}