{"version":3,"file":"GameLib.js","sourceRoot":"","sources":["../../../../src/game/typechain-types/libraries/GameLib.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, PopulatedTransaction, Signer, utils } from 'ethers';\nimport type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi';\nimport type { Listener, Provider } from '@ethersproject/providers';\nimport type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../common';\n\nexport type PositionStruct = {\n  x: PromiseOrValue<BigNumberish>;\n  y: PromiseOrValue<BigNumberish>;\n};\n\nexport type PositionStructOutput = [BigNumber, BigNumber] & {\n  x: BigNumber;\n  y: BigNumber;\n};\n\nexport type TileStruct = {\n  isInitialized: PromiseOrValue<boolean>;\n  terrain: PromiseOrValue<BigNumberish>;\n};\n\nexport type TileStructOutput = [boolean, number] & {\n  isInitialized: boolean;\n  terrain: number;\n};\n\nexport interface GameLibInterface extends utils.Interface {\n  functions: {\n    'adjacent((uint256,uint256),(uint256,uint256))': FunctionFragment;\n    'adjacentToCity((uint256,uint256),uint256)': FunctionFragment;\n    '_barbarianInfantrySelector(uint256)': FunctionFragment;\n    'coincident((uint256,uint256),(uint256,uint256))': FunctionFragment;\n    'connected((uint256,uint256)[])': FunctionFragment;\n    'euclidean((uint256,uint256),(uint256,uint256))': FunctionFragment;\n    'getBattleDamages(uint256,uint256,uint256)': FunctionFragment;\n    'getCityTileCountByLevel(uint256)': FunctionFragment;\n    'getMapTileAt((uint256,uint256))': FunctionFragment;\n    'getNeighbors((uint256,uint256))': FunctionFragment;\n    'getPlayer(address)': FunctionFragment;\n    'getSettlerHealthAndSpeedByLevel(uint256)': FunctionFragment;\n    '_goldLevelSelector(uint256)': FunctionFragment;\n    'inBound((uint256,uint256))': FunctionFragment;\n    'random(uint256,uint256)': FunctionFragment;\n    'strEq(string,string)': FunctionFragment;\n    'sum(uint256[])': FunctionFragment;\n    'withinDistance((uint256,uint256),(uint256,uint256),uint256)': FunctionFragment;\n    'activePlayerCheck(address)': FunctionFragment;\n    'entityOwnershipCheck(uint256,address)': FunctionFragment;\n    'ongoingGameCheck()': FunctionFragment;\n    'inboundPositionCheck((uint256,uint256))': FunctionFragment;\n    'validEntityCheck(uint256)': FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | 'adjacent'\n      | 'adjacentToCity'\n      | '_barbarianInfantrySelector'\n      | 'coincident'\n      | 'connected'\n      | 'euclidean'\n      | 'getBattleDamages'\n      | 'getCityTileCountByLevel'\n      | 'getMapTileAt'\n      | 'getNeighbors'\n      | 'getPlayer'\n      | 'getSettlerHealthAndSpeedByLevel'\n      | '_goldLevelSelector'\n      | 'inBound'\n      | 'random'\n      | 'strEq'\n      | 'sum'\n      | 'withinDistance'\n      | 'activePlayerCheck'\n      | 'entityOwnershipCheck'\n      | 'ongoingGameCheck'\n      | 'inboundPositionCheck'\n      | 'validEntityCheck'\n  ): FunctionFragment;\n\n  encodeFunctionData(functionFragment: 'adjacent', values: [PositionStruct, PositionStruct]): string;\n  encodeFunctionData(functionFragment: 'adjacentToCity', values: [PositionStruct, PromiseOrValue<BigNumberish>]): string;\n  encodeFunctionData(functionFragment: '_barbarianInfantrySelector', values: [PromiseOrValue<BigNumberish>]): string;\n  encodeFunctionData(functionFragment: 'coincident', values: [PositionStruct, PositionStruct]): string;\n  encodeFunctionData(functionFragment: 'connected', values: [PositionStruct[]]): string;\n  encodeFunctionData(functionFragment: 'euclidean', values: [PositionStruct, PositionStruct]): string;\n  encodeFunctionData(functionFragment: 'getBattleDamages', values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]): string;\n  encodeFunctionData(functionFragment: 'getCityTileCountByLevel', values: [PromiseOrValue<BigNumberish>]): string;\n  encodeFunctionData(functionFragment: 'getMapTileAt', values: [PositionStruct]): string;\n  encodeFunctionData(functionFragment: 'getNeighbors', values: [PositionStruct]): string;\n  encodeFunctionData(functionFragment: 'getPlayer', values: [PromiseOrValue<string>]): string;\n  encodeFunctionData(functionFragment: 'getSettlerHealthAndSpeedByLevel', values: [PromiseOrValue<BigNumberish>]): string;\n  encodeFunctionData(functionFragment: '_goldLevelSelector', values: [PromiseOrValue<BigNumberish>]): string;\n  encodeFunctionData(functionFragment: 'inBound', values: [PositionStruct]): string;\n  encodeFunctionData(functionFragment: 'random', values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]): string;\n  encodeFunctionData(functionFragment: 'strEq', values: [PromiseOrValue<string>, PromiseOrValue<string>]): string;\n  encodeFunctionData(functionFragment: 'sum', values: [PromiseOrValue<BigNumberish>[]]): string;\n  encodeFunctionData(functionFragment: 'withinDistance', values: [PositionStruct, PositionStruct, PromiseOrValue<BigNumberish>]): string;\n  encodeFunctionData(functionFragment: 'activePlayerCheck', values: [PromiseOrValue<string>]): string;\n  encodeFunctionData(functionFragment: 'entityOwnershipCheck', values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]): string;\n  encodeFunctionData(functionFragment: 'ongoingGameCheck', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'inboundPositionCheck', values: [PositionStruct]): string;\n  encodeFunctionData(functionFragment: 'validEntityCheck', values: [PromiseOrValue<BigNumberish>]): string;\n\n  decodeFunctionResult(functionFragment: 'adjacent', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'adjacentToCity', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: '_barbarianInfantrySelector', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'coincident', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'connected', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'euclidean', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getBattleDamages', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getCityTileCountByLevel', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getMapTileAt', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getNeighbors', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getPlayer', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getSettlerHealthAndSpeedByLevel', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: '_goldLevelSelector', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'inBound', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'random', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'strEq', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'sum', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'withinDistance', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'activePlayerCheck', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'entityOwnershipCheck', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'ongoingGameCheck', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'inboundPositionCheck', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'validEntityCheck', data: BytesLike): Result;\n\n  events: {\n    'GamePaused()': EventFragment;\n    'GameResumed()': EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: 'GamePaused'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'GameResumed'): EventFragment;\n}\n\nexport interface GamePausedEventObject {}\nexport type GamePausedEvent = TypedEvent<[], GamePausedEventObject>;\n\nexport type GamePausedEventFilter = TypedEventFilter<GamePausedEvent>;\n\nexport interface GameResumedEventObject {}\nexport type GameResumedEvent = TypedEvent<[], GameResumedEventObject>;\n\nexport type GameResumedEventFilter = TypedEventFilter<GameResumedEvent>;\n\nexport interface GameLib extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: GameLibInterface;\n\n  queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    adjacent(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<[boolean]>;\n\n    adjacentToCity(_position: PositionStruct, _cityID: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[boolean]>;\n\n    _barbarianInfantrySelector(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    coincident(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<[boolean]>;\n\n    connected(_positions: PositionStruct[], overrides?: CallOverrides): Promise<[boolean]>;\n\n    euclidean(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    getBattleDamages(_army1: PromiseOrValue<BigNumberish>, _army2: PromiseOrValue<BigNumberish>, _duration: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber, BigNumber] & { _damageOn1: BigNumber; _damageOn2: BigNumber }>;\n\n    getCityTileCountByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    getMapTileAt(_position: PositionStruct, overrides?: CallOverrides): Promise<[TileStructOutput]>;\n\n    getNeighbors(_position: PositionStruct, overrides?: CallOverrides): Promise<[PositionStructOutput[]]>;\n\n    getPlayer(_address: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    getSettlerHealthAndSpeedByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;\n\n    _goldLevelSelector(_goldLevel: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    inBound(_p: PositionStruct, overrides?: CallOverrides): Promise<[boolean]>;\n\n    random(_max: PromiseOrValue<BigNumberish>, _salt: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    strEq(_s1: PromiseOrValue<string>, _s2: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[boolean]>;\n\n    sum(_arr: PromiseOrValue<BigNumberish>[], overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    withinDistance(_p1: PositionStruct, _p2: PositionStruct, _dist: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[boolean]>;\n\n    activePlayerCheck(_player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[void]>;\n\n    entityOwnershipCheck(_entity: PromiseOrValue<BigNumberish>, _player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[void]>;\n\n    ongoingGameCheck(overrides?: CallOverrides): Promise<[void]>;\n\n    inboundPositionCheck(_position: PositionStruct, overrides?: CallOverrides): Promise<[void]>;\n\n    validEntityCheck(_entity: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[void]>;\n  };\n\n  adjacent(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<boolean>;\n\n  adjacentToCity(_position: PositionStruct, _cityID: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<boolean>;\n\n  _barbarianInfantrySelector(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n  coincident(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<boolean>;\n\n  connected(_positions: PositionStruct[], overrides?: CallOverrides): Promise<boolean>;\n\n  euclidean(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;\n\n  getBattleDamages(_army1: PromiseOrValue<BigNumberish>, _army2: PromiseOrValue<BigNumberish>, _duration: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber, BigNumber] & { _damageOn1: BigNumber; _damageOn2: BigNumber }>;\n\n  getCityTileCountByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n  getMapTileAt(_position: PositionStruct, overrides?: CallOverrides): Promise<TileStructOutput>;\n\n  getNeighbors(_position: PositionStruct, overrides?: CallOverrides): Promise<PositionStructOutput[]>;\n\n  getPlayer(_address: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;\n\n  getSettlerHealthAndSpeedByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;\n\n  _goldLevelSelector(_goldLevel: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n  inBound(_p: PositionStruct, overrides?: CallOverrides): Promise<boolean>;\n\n  random(_max: PromiseOrValue<BigNumberish>, _salt: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n  strEq(_s1: PromiseOrValue<string>, _s2: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>;\n\n  sum(_arr: PromiseOrValue<BigNumberish>[], overrides?: CallOverrides): Promise<BigNumber>;\n\n  withinDistance(_p1: PositionStruct, _p2: PositionStruct, _dist: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<boolean>;\n\n  activePlayerCheck(_player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;\n\n  entityOwnershipCheck(_entity: PromiseOrValue<BigNumberish>, _player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;\n\n  ongoingGameCheck(overrides?: CallOverrides): Promise<void>;\n\n  inboundPositionCheck(_position: PositionStruct, overrides?: CallOverrides): Promise<void>;\n\n  validEntityCheck(_entity: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>;\n\n  callStatic: {\n    adjacent(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<boolean>;\n\n    adjacentToCity(_position: PositionStruct, _cityID: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<boolean>;\n\n    _barbarianInfantrySelector(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    coincident(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<boolean>;\n\n    connected(_positions: PositionStruct[], overrides?: CallOverrides): Promise<boolean>;\n\n    euclidean(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getBattleDamages(_army1: PromiseOrValue<BigNumberish>, _army2: PromiseOrValue<BigNumberish>, _duration: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber, BigNumber] & { _damageOn1: BigNumber; _damageOn2: BigNumber }>;\n\n    getCityTileCountByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getMapTileAt(_position: PositionStruct, overrides?: CallOverrides): Promise<TileStructOutput>;\n\n    getNeighbors(_position: PositionStruct, overrides?: CallOverrides): Promise<PositionStructOutput[]>;\n\n    getPlayer(_address: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getSettlerHealthAndSpeedByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;\n\n    _goldLevelSelector(_goldLevel: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    inBound(_p: PositionStruct, overrides?: CallOverrides): Promise<boolean>;\n\n    random(_max: PromiseOrValue<BigNumberish>, _salt: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    strEq(_s1: PromiseOrValue<string>, _s2: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>;\n\n    sum(_arr: PromiseOrValue<BigNumberish>[], overrides?: CallOverrides): Promise<BigNumber>;\n\n    withinDistance(_p1: PositionStruct, _p2: PositionStruct, _dist: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<boolean>;\n\n    activePlayerCheck(_player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;\n\n    entityOwnershipCheck(_entity: PromiseOrValue<BigNumberish>, _player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;\n\n    ongoingGameCheck(overrides?: CallOverrides): Promise<void>;\n\n    inboundPositionCheck(_position: PositionStruct, overrides?: CallOverrides): Promise<void>;\n\n    validEntityCheck(_entity: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>;\n  };\n\n  filters: {\n    'GamePaused()'(): GamePausedEventFilter;\n    GamePaused(): GamePausedEventFilter;\n\n    'GameResumed()'(): GameResumedEventFilter;\n    GameResumed(): GameResumedEventFilter;\n  };\n\n  estimateGas: {\n    adjacent(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;\n\n    adjacentToCity(_position: PositionStruct, _cityID: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    _barbarianInfantrySelector(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    coincident(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;\n\n    connected(_positions: PositionStruct[], overrides?: CallOverrides): Promise<BigNumber>;\n\n    euclidean(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getBattleDamages(_army1: PromiseOrValue<BigNumberish>, _army2: PromiseOrValue<BigNumberish>, _duration: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getCityTileCountByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getMapTileAt(_position: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getNeighbors(_position: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getPlayer(_address: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getSettlerHealthAndSpeedByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    _goldLevelSelector(_goldLevel: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    inBound(_p: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;\n\n    random(_max: PromiseOrValue<BigNumberish>, _salt: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    strEq(_s1: PromiseOrValue<string>, _s2: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    sum(_arr: PromiseOrValue<BigNumberish>[], overrides?: CallOverrides): Promise<BigNumber>;\n\n    withinDistance(_p1: PositionStruct, _p2: PositionStruct, _dist: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    activePlayerCheck(_player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    entityOwnershipCheck(_entity: PromiseOrValue<BigNumberish>, _player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;\n\n    ongoingGameCheck(overrides?: CallOverrides): Promise<BigNumber>;\n\n    inboundPositionCheck(_position: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;\n\n    validEntityCheck(_entity: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    adjacent(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    adjacentToCity(_position: PositionStruct, _cityID: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    _barbarianInfantrySelector(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    coincident(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    connected(_positions: PositionStruct[], overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    euclidean(_p1: PositionStruct, _p2: PositionStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getBattleDamages(_army1: PromiseOrValue<BigNumberish>, _army2: PromiseOrValue<BigNumberish>, _duration: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getCityTileCountByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getMapTileAt(_position: PositionStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getNeighbors(_position: PositionStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getPlayer(_address: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getSettlerHealthAndSpeedByLevel(_level: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    _goldLevelSelector(_goldLevel: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    inBound(_p: PositionStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    random(_max: PromiseOrValue<BigNumberish>, _salt: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    strEq(_s1: PromiseOrValue<string>, _s2: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    sum(_arr: PromiseOrValue<BigNumberish>[], overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    withinDistance(_p1: PositionStruct, _p2: PositionStruct, _dist: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    activePlayerCheck(_player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    entityOwnershipCheck(_entity: PromiseOrValue<BigNumberish>, _player: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    ongoingGameCheck(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    inboundPositionCheck(_position: PositionStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    validEntityCheck(_entity: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n  };\n}\n"]}