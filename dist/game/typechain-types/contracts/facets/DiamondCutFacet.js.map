{"version":3,"file":"DiamondCutFacet.js","sourceRoot":"","sources":["../../../../../src/game/typechain-types/contracts/facets/DiamondCutFacet.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport declare namespace IDiamondCut {\n  export type FacetCutStruct = {\n    facetAddress: PromiseOrValue<string>;\n    action: PromiseOrValue<BigNumberish>;\n    functionSelectors: PromiseOrValue<BytesLike>[];\n  };\n\n  export type FacetCutStructOutput = [string, number, string[]] & {\n    facetAddress: string;\n    action: number;\n    functionSelectors: string[];\n  };\n}\n\nexport interface DiamondCutFacetInterface extends utils.Interface {\n  functions: {\n    \"diamondCut((address,uint8,bytes4[])[],address,bytes)\": FunctionFragment;\n  };\n\n  getFunction(nameOrSignatureOrTopic: \"diamondCut\"): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"diamondCut\",\n    values: [\n      IDiamondCut.FacetCutStruct[],\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n\n  decodeFunctionResult(functionFragment: \"diamondCut\", data: BytesLike): Result;\n\n  events: {\n    \"DiamondCut(tuple[],address,bytes)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"DiamondCut\"): EventFragment;\n}\n\nexport interface DiamondCutEventObject {\n  _diamondCut: IDiamondCut.FacetCutStructOutput[];\n  _init: string;\n  _calldata: string;\n}\nexport type DiamondCutEvent = TypedEvent<\n  [IDiamondCut.FacetCutStructOutput[], string, string],\n  DiamondCutEventObject\n>;\n\nexport type DiamondCutEventFilter = TypedEventFilter<DiamondCutEvent>;\n\nexport interface DiamondCutFacet extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: DiamondCutFacetInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    diamondCut(\n      _diamondCut: IDiamondCut.FacetCutStruct[],\n      _init: PromiseOrValue<string>,\n      _calldata: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  diamondCut(\n    _diamondCut: IDiamondCut.FacetCutStruct[],\n    _init: PromiseOrValue<string>,\n    _calldata: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    diamondCut(\n      _diamondCut: IDiamondCut.FacetCutStruct[],\n      _init: PromiseOrValue<string>,\n      _calldata: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {\n    \"DiamondCut(tuple[],address,bytes)\"(\n      _diamondCut?: null,\n      _init?: null,\n      _calldata?: null\n    ): DiamondCutEventFilter;\n    DiamondCut(\n      _diamondCut?: null,\n      _init?: null,\n      _calldata?: null\n    ): DiamondCutEventFilter;\n  };\n\n  estimateGas: {\n    diamondCut(\n      _diamondCut: IDiamondCut.FacetCutStruct[],\n      _init: PromiseOrValue<string>,\n      _calldata: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    diamondCut(\n      _diamondCut: IDiamondCut.FacetCutStruct[],\n      _init: PromiseOrValue<string>,\n      _calldata: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}