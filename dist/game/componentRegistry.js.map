{"version":3,"file":"componentRegistry.js","sourceRoot":"","sources":["../../src/game/componentRegistry.ts"],"names":[],"mappings":"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","sourcesContent":["import { decodeStringArrComp, decodeUint256ArrComp, encodeStringArrComp, encodeUint256ArrComp } from './componentSerde';\nimport { componentRegistryType, ComponentDataTypes, CompType } from '../types';\nimport { position } from '../types';\nimport {\n  decodeBoolComp,\n  decodeAddressComp,\n  decodeUint256Comp,\n  decodePositionComp,\n  decodeStringComp,\n  decodeInt256Comp,\n  encodePositionComp,\n  encodeBoolComp,\n  encodeStringComp,\n  encodeUint256Comp,\n  encodeAddressComp,\n  encodeInt256Comp,\n} from './componentSerde';\n\n// ------------------------------------\n// * Main Component Registry *\n\nexport const IsComponent = 'IsComponent';\nexport const Tag = 'Tag';\nexport const IsActive = 'IsActive';\nexport const InitTimestamp = 'InitTimestamp';\nexport const Position = 'Position';\nexport const Owner = 'Owner';\nexport const Level = 'Level';\nexport const Name = 'Name';\nexport const CanSettle = 'CanSettle';\nexport const ResourceType = 'ResourceType';\nexport const BuildingType = 'BuildingType';\nexport const Template = 'Template';\nexport const CanProduce = 'CanProduce';\nexport const Duration = 'Duration';\nexport const BalanceLastUpdated = 'BalanceLastUpdated';\nexport const MaxHealth = 'MaxHealth';\nexport const Health = 'Health';\nexport const Attack = 'Attack';\nexport const Defense = 'Defense';\nexport const Speed = 'Speed';\nexport const MoveCooldown = 'MoveCooldown';\nexport const BattleCooldown = 'BattleCooldown';\nexport const Load = 'Load';\nexport const City = 'City';\nexport const Amount = 'Amount';\nexport const InventoryType = 'InventoryType';\nexport const Inventory = 'Inventory';\nexport const LastTimestamp = 'LastTimestamp';\nexport const Source = 'Source';\nexport const Target = 'Target';\nexport const Keeper = 'Keeper';\nexport const Address = 'Address';\nexport const Cost = 'Cost';\nexport const Treaty = 'Treaty';\nexport const Army = 'Army';\nexport const StartPosition = 'StartPosition';\nexport const Terrain = 'Terrain';\nexport const CanBattle = 'CanBattle';\nexport const AttackRange = 'AttackRange';\n\nexport const COMPONENT_SPECS: CompType[] = [\n  { name: IsComponent, valueType: ComponentDataTypes.BOOL },\n  { name: Tag, valueType: ComponentDataTypes.STRING },\n  { name: IsActive, valueType: ComponentDataTypes.BOOL },\n  { name: InitTimestamp, valueType: ComponentDataTypes.UINT },\n  { name: Position, valueType: ComponentDataTypes.POSITION },\n  { name: Owner, valueType: ComponentDataTypes.UINT },\n  { name: Level, valueType: ComponentDataTypes.UINT },\n  { name: Name, valueType: ComponentDataTypes.STRING },\n  { name: CanSettle, valueType: ComponentDataTypes.BOOL },\n  { name: ResourceType, valueType: ComponentDataTypes.STRING },\n  { name: BuildingType, valueType: ComponentDataTypes.STRING },\n  { name: Template, valueType: ComponentDataTypes.UINT },\n  { name: CanProduce, valueType: ComponentDataTypes.BOOL },\n  { name: Duration, valueType: ComponentDataTypes.UINT },\n  { name: BalanceLastUpdated, valueType: ComponentDataTypes.UINT },\n  { name: MaxHealth, valueType: ComponentDataTypes.UINT },\n  { name: Health, valueType: ComponentDataTypes.UINT },\n  { name: Attack, valueType: ComponentDataTypes.UINT },\n  { name: Defense, valueType: ComponentDataTypes.UINT },\n  { name: Speed, valueType: ComponentDataTypes.UINT },\n  { name: MoveCooldown, valueType: ComponentDataTypes.UINT },\n  { name: BattleCooldown, valueType: ComponentDataTypes.UINT },\n  { name: Load, valueType: ComponentDataTypes.UINT },\n  { name: City, valueType: ComponentDataTypes.UINT },\n  { name: Keeper, valueType: ComponentDataTypes.UINT },\n  { name: Amount, valueType: ComponentDataTypes.UINT },\n  { name: InventoryType, valueType: ComponentDataTypes.STRING },\n  { name: LastTimestamp, valueType: ComponentDataTypes.UINT },\n  { name: Source, valueType: ComponentDataTypes.UINT },\n  { name: Target, valueType: ComponentDataTypes.UINT },\n  { name: Inventory, valueType: ComponentDataTypes.UINT },\n  { name: Address, valueType: ComponentDataTypes.ADDRESS },\n  { name: Cost, valueType: ComponentDataTypes.UINT },\n  { name: Treaty, valueType: ComponentDataTypes.ADDRESS },\n  { name: Army, valueType: ComponentDataTypes.UINT },\n  { name: StartPosition, valueType: ComponentDataTypes.POSITION },\n  { name: Terrain, valueType: ComponentDataTypes.UINT },\n  { name: CanBattle, valueType: ComponentDataTypes.BOOL },\n  { name: AttackRange, valueType: ComponentDataTypes.UINT },\n];\n\nexport interface componentInputTypeMap {\n  IsComponent: boolean;\n  Tag: string;\n  IsActive: boolean;\n  InitTimestamp: number;\n  Position: position;\n  Owner: number;\n  Level: number;\n  Name: string;\n  CanSettle: boolean;\n  ResourceType: string;\n  BuildingType: string;\n  Template: number;\n  CanProduce: boolean;\n  Duration: number;\n  BalanceLastUpdated: number;\n  MaxHealth: number;\n  Health: number;\n  Attack: number;\n  Defense: number;\n  Speed: number;\n  MoveCooldown: number;\n  BattleCooldown: number;\n  Load: number;\n  City: number;\n  Amount: number;\n  InventoryType: string;\n  InventoryTypes: string[];\n  LastTimestamp: number;\n  Source: number;\n  Target: number;\n  Keeper: number;\n  Inventory: number;\n  Address: string;\n  Cost: number;\n  Treaty: number;\n  Terrain: number;\n  CanBattle: boolean;\n  StartPosition: position;\n  AttackRange: number;\n}\n\nexport enum Tags {\n  Army = 'Army',\n  Battle = 'Battle',\n  Building = 'Building',\n  City = 'City',\n  Constituent = 'Constituent',\n  Guard = 'Guard',\n  Player = 'Player',\n  Resource = 'Resource',\n  ResourceInventory = 'ResourceInventory',\n  ResourceTemplate = 'ResourceTemplate',\n  ResourceGather = 'ResourceGather',\n  Settler = 'Settler',\n  Signature = 'Signature',\n  Tile = 'Tile',\n  TroopInventory = 'TroopInventory',\n  TroopProduction = 'TroopProduction',\n  TroopTemplate = 'TroopTemplate',\n  Gather = 'Gather',\n  Constant = 'Constant',\n}\n\nexport enum BuildingTypeOptions {\n  CityCenter = 'City Center',\n}\n\nexport enum InventoryTypeOptions {\n  Horseman = 'Horseman',\n  Warrior = 'Warrior',\n  Slinger = 'Slinger',\n  Guard = 'Guard',\n  Gold = 'Gold',\n  Food = 'Food',\n}\n\n// export enum ResourceType {}\n\n// ---------------------------------------------------------------------------\n\nexport const componentRegistry: componentRegistryType = {};\n\nObject.keys(COMPONENT_SPECS).forEach((key, idx) => {\n  const componentInfo = COMPONENT_SPECS[Number(key)];\n  componentRegistry[idx + 1] = componentInfo;\n});\n\n// assert the two are the same size\n\n// --------------------------------------------------------\n\nexport const componentNameToDecoder: Record<string, any> = {};\n\nObject.keys(componentRegistry).forEach((key) => {\n  const componentInfo = componentRegistry[Number(key)];\n\n  switch (componentInfo.valueType) {\n    case ComponentDataTypes.POSITION:\n      componentNameToDecoder[componentInfo.name] = decodePositionComp;\n      break;\n    case ComponentDataTypes.BOOL:\n      componentNameToDecoder[componentInfo.name] = decodeBoolComp;\n      break;\n    case ComponentDataTypes.STRING:\n      componentNameToDecoder[componentInfo.name] = decodeStringComp;\n      break;\n    case ComponentDataTypes.STRING_ARRAY:\n      componentNameToDecoder[componentInfo.name] = decodeStringArrComp;\n      break;\n    case ComponentDataTypes.ADDRESS:\n      componentNameToDecoder[componentInfo.name] = decodeAddressComp;\n      break;\n    case ComponentDataTypes.UINT:\n      componentNameToDecoder[componentInfo.name] = decodeUint256Comp;\n      break;\n    case ComponentDataTypes.UINT_ARRAY:\n      componentNameToDecoder[componentInfo.name] = decodeUint256ArrComp;\n      break;\n    case ComponentDataTypes.INT:\n      componentNameToDecoder[componentInfo.name] = decodeInt256Comp;\n      break;\n  }\n});\n\n// base component types\n\nexport const componentToType: Record<string, ComponentDataTypes> = {};\n\n// ex: Position: position\nObject.keys(componentRegistry).forEach((key, idx) => {\n  const componentInfo = componentRegistry[Number(key)];\n  componentToType[componentInfo.name] = componentInfo.valueType;\n});\n\nexport const componentTypeToDecoder: Record<ComponentDataTypes, any> = {\n  [ComponentDataTypes.UINT]: decodeUint256Comp,\n  [ComponentDataTypes.STRING]: decodeStringComp,\n  [ComponentDataTypes.BOOL]: decodeBoolComp,\n  [ComponentDataTypes.INT]: decodeInt256Comp,\n  [ComponentDataTypes.ADDRESS]: decodeAddressComp,\n  [ComponentDataTypes.POSITION]: decodePositionComp,\n  [ComponentDataTypes.UINT_ARRAY]: decodeUint256ArrComp,\n  [ComponentDataTypes.STRING_ARRAY]: decodeStringArrComp,\n  // [ComponentDataTypes.POSITION_ARRAY]: decodePositionArrComp,\n};\n\nexport const componentTypeToEncoder: Record<ComponentDataTypes, any> = {\n  [ComponentDataTypes.UINT]: encodeUint256Comp,\n  [ComponentDataTypes.STRING]: encodeStringComp,\n  [ComponentDataTypes.BOOL]: encodeBoolComp,\n  [ComponentDataTypes.INT]: encodeInt256Comp,\n  [ComponentDataTypes.ADDRESS]: encodeAddressComp,\n  [ComponentDataTypes.POSITION]: encodePositionComp,\n  [ComponentDataTypes.UINT_ARRAY]: encodeUint256ArrComp,\n  [ComponentDataTypes.STRING_ARRAY]: encodeStringArrComp,\n};\n\n// auto generated. component index starts at 1\nexport const componentNameToId: Record<string, number> = {};\n\nObject.keys(componentRegistry).forEach((key, idx) => {\n  const componentInfo = componentRegistry[Number(key)];\n  componentNameToId[componentInfo.name] = idx + 1;\n});\n\n// this is auto generated. It's a reverse mapping of componentNameToId and looks like\n// {1: IsActive: 2: Position, 3: ...}\nexport const componentIdToName: Record<number, string> = {};\n\nObject.keys(componentNameToId).forEach((key) => {\n  componentIdToName[componentNameToId[key]] = key;\n});\n"]}