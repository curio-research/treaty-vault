import { BigNumber as BN } from 'ethers';
import { position } from '../types';
import { handleComponentValueSet, handleComponentValueRemoved, handleEntityRemoved } from '../util/events';
export declare const decodeEntitiesAndRawValues: (val: [BN[], string[]]) => any;
export declare const decodeComponentValueSet: (componentName: string, entity: BN, value: string) => handleComponentValueSet;
export declare const decodeComponentValueRemoved: (componentName: string, entity: BN) => handleComponentValueRemoved;
export declare const decodeEntityRemoved: (entity: BN) => handleEntityRemoved;
export declare const encodePositionComp: (position: position) => string;
export declare const decodePositionComp: (bytes: string) => position;
export declare const encodePositionArrComp: (positions: position[]) => string;
export declare const decodePositionArrComp: (bytes: string) => position;
export declare const encodeStringComp: (string: string) => string;
export declare const decodeStringComp: (bytes: string) => string;
export declare const encodeStringArrComp: (srings: string[]) => string;
export declare const decodeStringArrComp: (bytes: string) => string[];
export declare const encodeAddressComp: (address: string) => string;
export declare const decodeAddressComp: (bytes: string) => string;
export declare const encodeUint256Comp: (number: number) => string;
export declare const decodeUint256Comp: (bytes: string) => number;
export declare const encodeUint256ArrComp: (numbers: number[]) => string;
export declare const decodeUint256ArrComp: (bytes: string) => number[];
export declare const encodeInt256Comp: (number: number) => string;
export declare const decodeInt256Comp: (bytes: string) => number;
export declare const encodeBoolComp: (boolean: boolean) => string;
export declare const decodeBoolComp: (bytes: string) => number;
export declare type ComponentValueTypes = position | string | number;
export declare const encodeString: (string: string) => string;
export declare const encodeUint256: (num: number) => string;
export declare const encodePosition: (pos: position) => string;
