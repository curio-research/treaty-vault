{"version":3,"file":"map.js","sourceRoot":"","sources":["../../src/util/map.ts"],"names":[],"mappings":"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","sourcesContent":["import { TILE_TYPE } from './../types/deployment';\nimport { position } from './../types/common';\n\nexport const getLeftPos = (pos: position, scale?: number): position => {\n  if (scale) return { x: pos.x - scale, y: pos.y };\n  return { x: pos.x - 1, y: pos.y };\n};\n\nexport const getLeftTopPos = (pos: position, scale?: number): position => {\n  if (scale) return { x: pos.x - scale, y: pos.y - scale };\n  return { x: pos.x - 1, y: pos.y - 1 };\n};\n\nexport const getLeftBottomPos = (pos: position, scale?: number): position => {\n  if (scale) return { x: pos.x - scale, y: pos.y + scale };\n  return { x: pos.x - 1, y: pos.y + 1 };\n};\n\nexport const getRightBottomPos = (pos: position, scale?: number): position => {\n  if (scale) return { x: pos.x + scale, y: pos.y + scale };\n  return { x: pos.x + 1, y: pos.y + 1 };\n};\n\nexport const getRightPos = (pos: position, scale?: number): position => {\n  if (scale) return { x: pos.x + scale, y: pos.y };\n  return { x: pos.x + 1, y: pos.y };\n};\n\nexport const getRightTopPos = (pos: position, scale?: number): position => {\n  if (scale) return { x: pos.x + scale, y: pos.y - scale };\n  return { x: pos.x + 1, y: pos.y - 1 };\n};\n\nexport const getTopPos = (pos: position, scale?: number): position => {\n  if (scale) return { x: pos.x, y: pos.y - scale };\n  return { x: pos.x, y: pos.y - 1 };\n};\n\nexport const getBottomPos = (pos: position, scale?: number): position => {\n  if (scale) return { x: pos.x, y: pos.y + scale };\n  return { x: pos.x, y: pos.y + 1 };\n};\n\nexport const getImmediateSurroundingPositions = (center: position): position[] => {\n  return [\n    getLeftTopPos(center),\n    getLeftPos(center),\n    getLeftBottomPos(center),\n    getBottomPos(center),\n    center,\n    getTopPos(center),\n    getRightTopPos(center),\n    getRightPos(center),\n    getRightBottomPos(center),\n  ];\n};\n\nexport const getProperTilePosition = (position: position, tileSize: number): position => {\n  return { x: position.x - (position.x % tileSize), y: position.y - (position.y % tileSize) };\n};\n\nexport const getTileMidPosition = (tilePosition: position, tileSize: number): position => {\n  return { x: tilePosition.x + Math.floor(tileSize / 2), y: tilePosition.y + Math.floor(tileSize / 2) };\n};\n\nexport const getLargeTilePos = (position: position, tileSize: number): position => {\n  return { x: Math.floor(position.x / tileSize), y: Math.floor(position.y / tileSize) };\n};\n\nexport const isEven = (number: number): boolean => {\n  if (number % 2 === 0) return true;\n  return false;\n};\n\nexport const isOdd = (number: number): boolean => {\n  return !isEven(number);\n};\n\n// scale a map to absolute coordinates\nexport const scaleMap = (map: TILE_TYPE[][], tileWidth: number): TILE_TYPE[][] => {\n  const scaledMap = [...Array(map.length * tileWidth)].map((e) => Array(map[0].length * tileWidth).fill(0));\n\n  for (let i = 0; i < scaledMap.length; i++) {\n    for (let j = 0; j < scaledMap[0].length; j++) {\n      const properTilePos = getLargeTilePos({ x: i, y: j }, tileWidth);\n      scaledMap[i][j] = map[properTilePos.x][properTilePos.y];\n    }\n  }\n\n  return scaledMap;\n};\n\nexport const euclidian = (pos1: position, pos2: position): number => {\n  return Math.floor(Math.sqrt(Math.pow(pos1.x - pos2.x, 2) + Math.pow(pos1.y - pos2.y, 2)));\n};\n"]}